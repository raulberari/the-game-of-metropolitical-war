[{"E:\\Programming\\the-game-of-metropolitical-war\\src\\index.tsx":"1","E:\\Programming\\the-game-of-metropolitical-war\\src\\Insurgent.tsx":"2","E:\\Programming\\the-game-of-metropolitical-war\\src\\Hegemon.tsx":"3","E:\\Programming\\the-game-of-metropolitical-war\\src\\Board.tsx":"4","E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewHegemonPlacement.tsx":"5","E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewInsurgentPlacement.tsx":"6","E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewInsurgentMovement.tsx":"7","E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewHexes.tsx":"8","E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoIntelligence.tsx":"9","E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoGameplay.tsx":"10","E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoWinning.tsx":"11","E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoHegemon.tsx":"12","E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoInsurgents.tsx":"13","E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewHex.tsx":"14","E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewPoint.tsx":"15","E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewHeightMove.tsx":"16","E:\\Programming\\the-game-of-metropolitical-war\\src\\Settings.tsx":"17","E:\\Programming\\the-game-of-metropolitical-war\\src\\Root.tsx":"18"},{"size":9531,"mtime":1609017132809,"results":"19","hashOfConfig":"20"},{"size":13305,"mtime":1608650461026,"results":"21","hashOfConfig":"20"},{"size":8060,"mtime":1608645506931,"results":"22","hashOfConfig":"20"},{"size":32477,"mtime":1609017422864,"results":"23","hashOfConfig":"20"},{"size":1798,"mtime":1608858782440,"results":"24","hashOfConfig":"20"},{"size":1576,"mtime":1608859318433,"results":"25","hashOfConfig":"20"},{"size":1989,"mtime":1608859254036,"results":"26","hashOfConfig":"20"},{"size":2053,"mtime":1608859881802,"results":"27","hashOfConfig":"20"},{"size":2094,"mtime":1608928393763,"results":"28","hashOfConfig":"20"},{"size":6818,"mtime":1608929556880,"results":"29","hashOfConfig":"20"},{"size":811,"mtime":1608835180393,"results":"30","hashOfConfig":"20"},{"size":2469,"mtime":1608929693991,"results":"31","hashOfConfig":"20"},{"size":3892,"mtime":1608929861357,"results":"32","hashOfConfig":"20"},{"size":6852,"mtime":1608862683382,"results":"33","hashOfConfig":"20"},{"size":8289,"mtime":1608859177783,"results":"34","hashOfConfig":"20"},{"size":5691,"mtime":1608858083548,"results":"35","hashOfConfig":"20"},{"size":3608,"mtime":1608937485294,"results":"36","hashOfConfig":"20"},{"size":1339,"mtime":1608935366851,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vf4w3s",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Programming\\the-game-of-metropolitical-war\\src\\index.tsx",["76","77","78"],"E:\\Programming\\the-game-of-metropolitical-war\\src\\Insurgent.tsx",[],["79","80"],"E:\\Programming\\the-game-of-metropolitical-war\\src\\Hegemon.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\Board.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewHegemonPlacement.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewInsurgentPlacement.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewInsurgentMovement.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewHexes.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoIntelligence.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoGameplay.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoWinning.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoHegemon.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\info-content\\InfoInsurgents.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewHex.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewPoint.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\PreviewHeightMove.tsx",[],"E:\\Programming\\the-game-of-metropolitical-war\\src\\Settings.tsx",["81","82","83","84","85","86"],"/* eslint-disable jsx-a11y/alt-text */\r\n\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\n\r\nimport { Config } from \"./types\";\r\n\r\nexport const Settings = (props: {\r\n  closeSettings: () => void;\r\n  config: Config;\r\n  setConfig: Dispatch<SetStateAction<Config>>;\r\n  sfx: HTMLAudioElement[];\r\n  sfxVolumes: number[];\r\n  ambientSound: HTMLAudioElement;\r\n  backgroundMusic: HTMLAudioElement;\r\n}) => {\r\n  const {\r\n    closeSettings,\r\n    config,\r\n    setConfig,\r\n    sfx,\r\n    sfxVolumes,\r\n    ambientSound,\r\n    backgroundMusic,\r\n  } = props;\r\n  const [sfxValue, setSfxValue] = React.useState(sfx[0].volume * 100);\r\n  const [ambientSoundValue, setAmbientSoundValue] = React.useState(\r\n    ambientSound.volume * 100\r\n  );\r\n  const [backgroundMusicValue, setBackgroundMusicValue] = React.useState(\r\n    backgroundMusic.volume * 100\r\n  );\r\n\r\n  const handleSFXSlider = (\r\n    event: React.ChangeEvent<{}>,\r\n    newValue: number | number[]\r\n  ) => {\r\n    // @ts-ignore\r\n    setSfxValue(newValue);\r\n    for (let i = 0; i < sfx.length; i++) {\r\n      const ratio = sfxValue / 100 / sfxVolumes[0];\r\n      if (isNaN(sfxVolumes[i] * ratio)) {\r\n        sfx[i].volume = 0;\r\n      } else {\r\n        sfx[i].volume = Math.min(sfxVolumes[i] * ratio, 1);\r\n      }\r\n    }\r\n  };\r\n  const handleAmbientSlider = (\r\n    event: React.ChangeEvent<{}>,\r\n    newValue: number | number[]\r\n  ) => {\r\n    // @ts-ignore\r\n    setAmbientSoundValue(newValue);\r\n    ambientSound.volume = ambientSoundValue / 100;\r\n  };\r\n  const handleBackgroundMusicSlider = (\r\n    event: React.ChangeEvent<{}>,\r\n    newValue: number | number[]\r\n  ) => {\r\n    // @ts-ignore\r\n    setBackgroundMusicValue(newValue);\r\n    backgroundMusic.volume = backgroundMusicValue / 100;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"settingsContainer\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <div className=\"closeInfoPanel\">\r\n        <span id=\"closeSettings\" onClick={closeSettings}>\r\n          âœ•\r\n        </span>\r\n      </div>\r\n      <img\r\n        className=\"infoImage\"\r\n        src={process.env.PUBLIC_URL + \"/images/visuals/drone-swarm.jpg\"}\r\n      />\r\n      <h1 style={{ textAlign: \"center\" }}>SETTINGS</h1>\r\n      <div id=\"settingsContentContainer\">\r\n        <div className=\"settingItem\">\r\n          <span className=\"settingName\">Sound Effects</span>\r\n          <div className=\"sliderContainer\">\r\n            <Slider\r\n              value={sfxValue}\r\n              onChange={handleSFXSlider}\r\n              aria-labelledby=\"continuous-slider\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"settingItem\">\r\n          <span className=\"settingName\">Ambient Sounds</span>\r\n\r\n          <div className=\"sliderContainer\">\r\n            <Slider\r\n              value={ambientSoundValue}\r\n              onChange={handleAmbientSlider}\r\n              aria-labelledby=\"continuous-slider\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"settingItem\">\r\n          <span className=\"settingName\">Music</span>\r\n\r\n          <div className=\"sliderContainer\">\r\n            <Slider\r\n              value={backgroundMusicValue}\r\n              onChange={handleBackgroundMusicSlider}\r\n              aria-labelledby=\"continuous-slider\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","E:\\Programming\\the-game-of-metropolitical-war\\src\\Root.tsx",["87","88"],{"ruleId":"89","severity":1,"message":"90","line":10,"column":10,"nodeType":"91","messageId":"92","endLine":10,"endColumn":14},{"ruleId":"89","severity":1,"message":"93","line":103,"column":7,"nodeType":"91","messageId":"92","endLine":103,"endColumn":23},{"ruleId":"89","severity":1,"message":"94","line":309,"column":7,"nodeType":"91","messageId":"92","endLine":309,"endColumn":29},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"89","severity":1,"message":"99","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":20},{"ruleId":"89","severity":1,"message":"100","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":19},{"ruleId":"89","severity":1,"message":"101","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":16},{"ruleId":"89","severity":1,"message":"102","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":14},{"ruleId":"89","severity":1,"message":"103","line":23,"column":5,"nodeType":"91","messageId":"92","endLine":23,"endColumn":11},{"ruleId":"89","severity":1,"message":"104","line":24,"column":5,"nodeType":"91","messageId":"92","endLine":24,"endColumn":14},{"ruleId":"89","severity":1,"message":"105","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":16},{"ruleId":"89","severity":1,"message":"104","line":17,"column":18,"nodeType":"91","messageId":"92","endLine":17,"endColumn":27},"@typescript-eslint/no-unused-vars","'Root' is defined but never used.","Identifier","unusedVar","'generateHegemons' is assigned a value but never used.","'generateInsurgentSwarm' is assigned a value but never used.","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'makeStyles' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'config' is assigned a value but never used.","'setConfig' is assigned a value but never used.","'config' is defined but never used.","no-global-assign","no-unsafe-negation"]